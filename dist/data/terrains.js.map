{
  "version": 3,
  "sources": ["../../data/terrains.ts"],
  "sourcesContent": ["export const Terrains: { [k: string]: TerrainData } = {\r\n\tburningterrain: {\r\n\t\tname: \"Burning Terrain\",\r\n\t\tcondition: {\r\n\t\t\tduration: 5,\r\n\t\t\tonBasePowerPriority: 6,\r\n\t\t\tonModifyMove(move) {\r\n\t\t\t\tconst fireMoves = ['smackdown', 'thousandarrows', 'clearsmog', 'smog'];\r\n\t\t\t\tif (fireMoves.includes(move.id)) {\r\n\t\t\t\t\tmove.types = [move.type, 'Fire'];\r\n\t\t\t\t}\r\n\r\n\t\t\t},\r\n\t\t\tonBasePower(basePower, target, source, move) {\r\n\t\t\t\tconst terrainEndMoves = ['defog', 'gust', 'hurricane', 'muddywater', 'sandtomb', 'razorwind', 'sludgewave', 'sparklingaria', 'surf', 'waterpledge', 'watersport', 'waterspout', 'hydrovortex', 'tailwind', 'twister', 'whirlwind', 'oceanicoperatta', 'continentalcrush', 'supersonicskystrike'];\r\n\t\t\t\tconst rockfireMoves = ['smackdown', 'thousandarrows'];\r\n\t\t\t\tconst smogfireMoves = ['smog', 'clearsmog'];\r\n\t\t\t\tlet modifier = 1;\r\n\t\t\t\tif (rockfireMoves.includes(move.id))\r\n\t\t\t\t\tmodifier *= 2;\r\n\t\t\t\tif (smogfireMoves.includes(move.id)) {\r\n\t\t\t\t\tmodifier *= 1.5\r\n\t\t\t\t}\r\n\t\t\t\tif (move.type === 'Fire' && target.isGrounded()) {\r\n\t\t\t\t\tmodifier *= 1.5;\r\n\t\t\t\t}\r\n\t\t\t\tif (move.type === 'Grass' && target.isGrounded()) {\r\n\t\t\t\t\tmodifier *= 0.5;\r\n\t\t\t\t}\r\n\t\t\t\tif (move.type === 'Ice') {\r\n\t\t\t\t\tmodifier *= 0.5;\r\n\t\t\t\t}\r\n\t\t\t\tif (terrainEndMoves.includes(move.id)) {\r\n\t\t\t\t\tmodifier *= 5325 / 4096;\r\n\t\t\t\t}\r\n\t\t\t\treturn this.chainModify(modifier);\r\n\t\t\t},\r\n\t\t\tonAfterMove(source, target, move) {\r\n\t\t\t\tconst terrainEndMoves = ['defog', 'gust', 'hurricane', 'muddywater', 'sandtomb', 'razorwind', 'sludgewave', 'sparklingaria', 'surf', 'waterpledge', 'watersport', 'waterspout', 'hydrovortex', 'tailwind', 'twister', 'whirlwind', 'oceanicoperatta', 'continentalcrush', 'supersonicskystrike'];\r\n\t\t\t\tif (terrainEndMoves.includes(move.id)) {\r\n\t\t\t\t\tthis.field.clearTerrain();\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tonResidual(pokemon) {\r\n\t\t\t\tconst immune = ['flamebody', 'flareboost', 'flashfire', 'heatproof', 'magmaarmor', 'waterbubble', 'waterveil'];\r\n\t\t\t\tconst weak = ['leafguard', 'fluffy', 'grasspelt', 'icebody'];\r\n\t\t\t\tif (!immune.includes(pokemon.ability) || !pokemon.volatiles['aquaring']) {\r\n\t\t\t\t\tlet typeMod = this.clampIntRange(this.dex.getEffectiveness('Fire', pokemon.types), -6, 6);\r\n\t\t\t\t\tlet damage = this.clampIntRange(pokemon.baseMaxhp / 8 * Math.pow(2, typeMod), 1);\r\n\t\t\t\t\tif (weak.includes(pokemon.ability)) {\r\n\t\t\t\t\t\tthis.damage(damage * 2, pokemon);\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tthis.damage(damage, pokemon);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tif (this.field.weather === 'rain' || this.field.weather === 'sandstorm')\r\n\t\t\t\t\tthis.field.clearTerrain();\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\tcorrosiveterrain: {\r\n\t\tname: \"Corrosive Terrain\",\r\n\t\tcondition: {\r\n\t\t\tduration: 5,\r\n\t\t\tonBasePowerPriority: 6,\r\n\t\t\tonModifyMove(move) {\r\n\t\t\t\tlet poisonedMoves = ['mudbomb', 'mudshot', 'mudslap', 'muddywater', 'smackdown', 'whirlpool', 'thousandarrows'];\r\n\t\t\t\tif (move.type === 'Grass') {\r\n\t\t\t\t\tmove.types = [move.type, 'Poison'];\r\n\t\t\t\t}\r\n\t\t\t\tif (poisonedMoves.includes(move.id)) {\r\n\t\t\t\t\tmove.types = [move.type, 'Poison'];\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tonSwitchIn(pokemon) {\r\n\t\t\t\tlet immune = ['immunity, magicguard, poisonheal, toxicboost, wonderguard'];\r\n\t\t\t\tif (!immune.includes(pokemon.ability) && pokemon.isGrounded() && !(pokemon.types.includes('Poison') || !pokemon.types.includes('Steel'))) {\r\n\t\t\t\t\tlet typeMod = this.dex.getEffectiveness('Poison', pokemon.types);\r\n\t\t\t\t\ttypeMod = this.clampIntRange(typeMod, -6, 6);\r\n\t\t\t\t\tthis.damage(pokemon.baseMaxhp / 4 * Math.pow(2, typeMod), pokemon);\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tonBasePower(basePower, target, source, move) {\r\n\t\t\t\tlet superStrong = ['acid', 'acidspray', 'grassknot'];\r\n\t\t\t\tlet poisonedMoves = ['mudbomb', 'mudshot', 'mudslap', 'muddywater', 'smackdown', 'whirlpool', 'thousandarrows'];\r\n\t\t\t\tif (superStrong.includes(move.id))\r\n\t\t\t\t\tthis.chainModify(2);\r\n\t\t\t\tif (poisonedMoves.includes(move.id)) {\r\n\t\t\t\t\treturn this.chainModify(1.5);\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tonResidual(pokemon) {\r\n\t\t\t\tlet immune = ['immunity, magicguard, poisonheal, toxicboost, wonderguard'];\r\n\t\t\t\tif (!immune.includes(pokemon.ability) && !(pokemon.types.includes('Poison') || !pokemon.types.includes('Steel'))){\r\n\t\t\t\t\tif (pokemon.status === 'slp' || pokemon.hasAbility('comatose')) {\r\n\t\t\t\t\t\tthis.damage(pokemon.baseMaxhp / 16, pokemon);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\tcorrosivemistterrain: {\r\n\t\tname: \"Corrosive Mist Terrain\",\r\n\t\tcondition: {\r\n\t\t\tduration: 5,\r\n\t\t\tonBasePowerPriority: 6,\r\n\t\t\tonModifyMove(move) {\r\n\t\t\t\tconst poisonedMoves = ['bubblebeam', 'bubble', 'sparklingaria', 'energyball'];\r\n\t\t\t\tif (move.type === 'Flying' && move.category === 'Special') {\r\n\t\t\t\t\tmove.types = ['Flying', 'Poison'];\r\n\t\t\t\t}\r\n\t\t\t\tif (poisonedMoves.includes(move.id)) {\r\n\t\t\t\t\tmove.types = [move.type, 'Poison'];\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tonBasePower(basePower, target, source, move) {\r\n\t\t\t\tlet modifier = 1;\r\n\t\t\t\tconst poisonedMoves = ['bubblebeam', 'bubble', 'sparklingaria'];\r\n\t\t\t\tconst smogMoves = ['smog', 'clearsmog', 'acidspray'];\r\n\t\t\t\tconst terrainEndMoves = ['defog', 'gust', 'hurricane', 'razorwind', 'tailwind', 'twister', 'whirlwind', 'supersonicskystrike', 'seedflare'];\r\n\t\t\t\tconst igniteMoves = ['eruption', 'explosion', 'firepledge', 'flameburst', 'heatwave', 'incinerate', 'lavaplume', 'mindblown', 'searingshot', 'selfdestruct', 'infernooverdrive'];\r\n\t\t\t\tif (move.type === 'Fire') {\r\n\t\t\t\t\tmodifier *= 1.5;\r\n\t\t\t\t}\r\n\t\t\t\tif (poisonedMoves.includes(move.id))\r\n\t\t\t\t\tmodifier *= 1.5;\r\n\t\t\t\tif (smogMoves.includes(move.id))\r\n\t\t\t\t\tmodifier *= 1.5;\r\n\t\t\t\tif (terrainEndMoves.includes(move.id) || igniteMoves.includes(move.id))\r\n\t\t\t\t\tmodifier *= 5325/4096;\r\n\t\t\t\treturn this.chainModify(modifier);\r\n\t\t\t},\r\n\t\t\tonAfterMove(target, source, move) {\r\n\t\t\t\tconst terrainEndMoves = ['defog', 'gust', 'hurricane', 'razorwind', 'tailwind', 'twister', 'whirlwind', 'supersonicskystrike', 'seedflare'];\r\n\t\t\t\tconst igniteMoves = ['eruption', 'explosion', 'firepledge', 'flameburst', 'heatwave', 'incinerate', 'lavaplume', 'mindblown', 'searingshot', 'selfdestruct', 'infernooverdrive'];\r\n\t\t\t\tif (igniteMoves.includes(move.id)) {\r\n\t\t\t\t\tfor (const pokemon of this.getAllActive()) {\r\n\t\t\t\t\t\tif (pokemon.hasAbility('damp'))\r\n\t\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tthis.add('-message', 'The toxic mist combusted!');\r\n\t\t\t\t\tfor (const pokemon of this.getAllActive()) {\r\n\t\t\t\t\t\tif (pokemon.hasAbility('flashfire') || pokemon.isSemiInvulnerable() || pokemon.isProtected() || pokemon.side.sideConditions['wideguard'])\r\n\t\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t\tif (pokemon.hasAbility('sturdy') || pokemon.volatiles['endure'] !== undefined) {\r\n\t\t\t\t\t\t\tthis.damage(this.runEvent('Damage', pokemon, null, move, pokemon.baseMaxhp - 1), pokemon);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\tthis.damage(pokemon.baseMaxhp, pokemon);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tthis.field.clearTerrain();\r\n\t\t\t\t}\r\n\t\t\t\tif (terrainEndMoves.includes(move.id)) {\r\n\t\t\t\t\tthis.field.clearTerrain();\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tonFieldResidualOrder: 27,\r\n\t\t\tonFieldResidualSubOrder: 7,\r\n\t\t\tonFieldResidual() {\r\n\t\t\t\tfor (const pokemon of this.getAllActive()) {\r\n\t\t\t\t\tif (pokemon.trySetStatus('psn')) {\r\n\t\t\t\t\t\tthis.damage(this.runEvent('Damage', pokemon, null, this.dex.conditions.get('psn'), pokemon.baseMaxhp / 8), pokemon);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tonFieldStart() {\r\n\t\t\t\tthis.add('-fieldstart', \"Corrosive Mist Terrain\");\r\n\t\t\t},\r\n\t\t\tonFieldEnd() {\r\n\t\t\t\tthis.add('-fieldend', 'Corrosive Mist Terrain')\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n}\r\n"],
  "mappings": "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",
  "names": []
}
